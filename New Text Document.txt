// Obtém o corpo da resposta do Prometheus
def responseBody = prev.getResponseDataAsString()

// Define regex para extrair `sum` e `count` (ajuste o filtro se necessário)
def sumMatcher = (responseBody =~ /http_server_requests_seconds_sum\{.*uri="\/customers\/filter".*\} (\d+\.\d+)/)
def countMatcher = (responseBody =~ /http_server_requests_seconds_count\{.*uri="\/customers\/filter".*\} (\d+\.\d+)/)

// Variáveis para armazenar os valores extraídos
def sum = 0.0
def count = 0.0

// Extrair os valores, se encontrados
if (sumMatcher.find()) {
    sum = sumMatcher.group(1).toDouble()
} else {
    log.error("Não foi possível encontrar o valor de 'sum'.")
}

if (countMatcher.find()) {
    count = countMatcher.group(1).toDouble()
} else {
    log.error("Não foi possível encontrar o valor de 'count'.")
}

// Calcular a média (em ms, multiplicando por 1000) e armazenar na variável JMeter
if (count > 0) {
    def avgResponseTime = (sum / count) * 1000 // Converte para milissegundos
    vars.put("responseTime", avgResponseTime.toString()) // Armazena o valor na variável 'responseTime'
    log.info("Tempo médio de resposta calculado: ${avgResponseTime}ms")
} else {
    log.error("O valor de 'count' é zero. Não é possível calcular a média.")
}

// Obtém o valor extraído
def avgResponseTime = vars.get("responseTime") as Double

// Verifica se o valor está disponível
if (avgResponseTime == null) {
    AssertionResult.setFailure(true)
    AssertionResult.setFailureMessage("Não foi possível extrair o tempo médio de resposta.")
} else if (avgResponseTime > 50) {
    AssertionResult.setFailure(true)
    AssertionResult.setFailureMessage("Tempo médio acima do limite: ${avgResponseTime}ms")
} else {
    AssertionResult.setFailure(false)
}



// Obtém o valor da média calculada
def avgResponseTime = vars.get("responseTime") as Double

// Verifica se o valor foi calculado e está abaixo de 50ms
if (avgResponseTime == null) {
    AssertionResult.setFailure(true)
    AssertionResult.setFailureMessage("Tempo médio de resposta não foi calculado.")
} else if (avgResponseTime > 50) {
    AssertionResult.setFailure(true)
    AssertionResult.setFailureMessage("Tempo médio de resposta acima do limite: ${avgResponseTime}ms")
} else {
    AssertionResult.setFailure(false)
}

