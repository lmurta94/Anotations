
// Obter o total esperado de iterações (threads x loops)
int totalIterations = ctx.getThreadGroup().getNumThreads() * ctx.getThreadGroup().getSamplerController().getLoops()

// Incrementar o contador global após cada execução
int completedIterations = props.get("completedIterations") != null ? props.get("completedIterations") as int : 0
completedIterations += 1
props.put("completedIterations", completedIterations)

log.info("Iterações concluídas: ${completedIterations} de ${totalIterations}")




// Obter o total esperado de iterações
int totalIterations = ctx.getThreadGroup().getNumThreads() * ctx.getThreadGroup().getSamplerController().getLoops()

// Verificar o número de iterações concluídas
int completedIterations = props.get("completedIterations") as int

if (completedIterations == totalIterations) {
    // Realizar validação após todas as execuções
    long averageTime = props.get("averageTime") as long ?: 0
    if (averageTime > 50) {
        prev.setSuccessful(false)
        prev.setResponseMessage("Falha: Tempo médio acima de 50ms após todas as iterações.")
    } else {
        prev.setSuccessful(true)
    }
} else {
    // Ignorar validação até que todas as execuções sejam concluídas
    log.info("Ainda aguardando mais iterações para validar.")
}
