package org.example;

import customer.CustomerDTORequest;
import customer.CustomerDTOResponse;
import customer.MutinyCustomerServiceGrpc;
import io.smallrye.mutiny.Multi;
import io.smallrye.mutiny.Uni;

import java.util.concurrent.atomic.AtomicLong;

public class CustomerServiceImpl extends MutinyCustomerServiceGrpc.CustomerServiceImplBase {

    private final AtomicLong idGenerator = new AtomicLong();

    @Override
    public Uni<CustomerDTOResponse> getCustomers(Multi<CustomerDTORequest> requests) {
        return requests
            .collect()
            .asList()  // Converte o stream em uma lista de requests
            .map(requestList -> {
                // Processa o stream (pegando o primeiro request como exemplo)
                CustomerDTORequest firstRequest = requestList.get(0);

                // Gera o ID para o cliente
                long id = idGenerator.incrementAndGet();

                // Gera a resposta com base no primeiro request
                return CustomerDTOResponse.newBuilder()
                        .setName(firstRequest.getName())
                        .setLastname(firstRequest.getLastname())
                        .setEmail(firstRequest.getEmail())
                        .setAge(firstRequest.getAge())
                        .setId(id)
                        .build();
            });
    }
}
